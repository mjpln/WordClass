/*
 * File: app/store/synonymStore.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.store.synonymStore', {
    extend: 'Ext.data.Store',

    requires: [
        'MyApp.model.synonymModel',
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Json'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            model: 'MyApp.model.synonymModel',
            storeId: 'synonymStore',
            pageSize: 10,
            proxy: {
                type: 'ajax',
                url: '../synonym.action',
                reader: {
                    type: 'json',
                    root: 'root'
                }
            },
            listeners: {
                beforeload: {
                    fn: me.onJsonstoreBeforeLoad,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onJsonstoreBeforeLoad: function(store, operation, eOpts) {
        var synonym = Ext.getCmp("tfsynonym").getValue().replace(new RegExp(' ','g'),'');
        var synonymprecise = Ext.getCmp("cksynonymprecise").getValue();
        var iscurrentworditem = Ext.getCmp("ckcworditem").getValue();
        var iscurrentwordclass = Ext.getCmp("ckcwordclass2").getValue();
        var synonymtype = Ext.getCmp("cbsynonymtype").getValue();
        var citycode = Ext.getCmp("selectcity2").submitValue;
        this.proxy.actionMethods = "post";
        this.proxy.extraParams = {
            action: 'select',
            synonym: synonym,
            isprecise: synonymprecise,
            iscurrentworditem: iscurrentworditem,
            iscurrentwordclass: iscurrentwordclass,
            type: synonymtype,
            curworditem: curworditem,
            curwordclass: curwordclass,
            citycode: citycode
        };
    }

});