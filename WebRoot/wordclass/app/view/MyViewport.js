/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    requires: [
        'Ext.button.Button',
        'Ext.form.field.ComboBox',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Action',
        'Ext.selection.CellModel',
        'Ext.grid.plugin.CellEditing',
        'Ext.toolbar.Paging',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.form.field.TextArea',
        'Ext.ux.Comboboxtree',
        'Ext.selection.CheckboxModel'
    ],

    border: 0,
    layout: 'fit',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    border: 0,
                    autoScroll: true,
                    layout: 'column',
                    items: [
                        {
                            xtype: 'panel',
                            columnWidth: 0.3,
                            layout: 'column',
                            items: [
                                {
                                    xtype: 'panel',
                                    columnWidth: 1,
                                    border: 0,
                                    layout: 'column',
                                    title: '词类显示区',
                                    items: [
                                        {
                                            xtype: 'panel',
                                            columnWidth: 1,
                                            border: 0,
                                            margin: '20px 0px 17px 10px',
                                            layout: 'column',
                                            items: [
                                                {
                                                    xtype: 'textfield',
                                                    columnWidth: 0.5,
                                                    height: 22,
                                                    id: 'tfwordclass',
                                                    margin: '0px 10px 0px 10px',
                                                    width: 211,
                                                    fieldLabel: '词类',
                                                    labelWidth: 30
                                                },
                                                {
                                                    xtype: 'checkboxfield',
                                                    columnWidth: 0.2,
                                                    height: 18,
                                                    id: 'ckwordclassprecise',
                                                    margin: '0px 10px 0px 0px',
                                                    fieldLabel: '',
                                                    boxLabel: '精确'
                                                },
                                                {
                                                    xtype: 'button',
                                                    height: 22,
                                                    hidden: true,
                                                    margin: '0px 10px 0px 10px',
                                                    icon: '../Images/export.gif',
                                                    text: '导出',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick1,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    columnWidth: 0.3,
                                                    hidden: true,
                                                    id: 'cbwordclasstypeselect',
                                                    margin: '0px 10px 0px 0px',
                                                    fieldLabel: '',
                                                    store: 'wordclassquerystore'
                                                },
                                                {
                                                    xtype: 'button',
                                                    margin: '0px 5px 0px 0px',
                                                    icon: '../Images/search-small.gif',
                                                    text: '',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'gridpanel',
                                            columnWidth: 1,
                                            height: 270,
                                            id: 'wordclassgridpanel',
                                            margin: '10px 5px 0px 5px',
                                            enableColumnHide: false,
                                            store: 'wordclassStore',
                                            viewConfig: {
                                                enableTextSelection: true,
                                                loadingText: '词类正在加载中,请稍后...'
                                            },
                                            columns: [
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                    },
                                                    width: 40,
                                                    align: 'center',
                                                    dataIndex: 'id',
                                                    text: '序号'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                    },
                                                    width: 230,
                                                    dataIndex: 'wordclass',
                                                    text: '词类',
                                                    editor: {
                                                        xtype: 'textfield'
                                                    }
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        return '<div style="white-space:normal;font-size:12px;">' +value+ '</div>';

                                                    },
                                                    width: 40,
                                                    dataIndex: 'isHaveItem',
                                                    text: '词条',
                                                    editor: {
                                                        xtype: 'textfield'
                                                    }
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                    },
                                                    hidden: true,
                                                    width: 70,
                                                    dataIndex: 'wordclasstype',
                                                    text: '词类归属',
                                                    editor: {
                                                        xtype: 'combobox',
                                                        store: 'wordcalsstypeStore'
                                                    }
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    hidden: true,
                                                    dataIndex: 'wordclassid',
                                                    text: 'wordclassid'
                                                },
                                                {
                                                    xtype: 'actioncolumn',
                                                    header: '删除',
                                                    width: 35,
                                                    align: 'center',
                                                    items: [
                                                        {
                                                            handler: function(view, rowIndex, colIndex, item, e) {
                                                                Ext.MessageBox.confirm('提示','确定删除该记录吗?',callBack);
                                                                function callBack(id){
                                                                    if(id=='yes'){
                                                                        var gridpanel = Ext.getCmp("wordclassgridpanel");
                                                                        var wordclass = gridpanel.store.getAt(rowIndex).get('wordclass');
                                                                        var wordclassid  = gridpanel.store.getAt(rowIndex).get('wordclassid');
                                                                        var wordclasstype  = gridpanel.store.getAt(rowIndex).get('wordclasstype');
                                                                        //alert(wordclasstype);
                                                                        Ext.Ajax.request({
                                                                            url: '../wordclass.action',
                                                                            method: 'post',
                                                                            params: {
                                                                                action: 'delete',
                                                                                wordclassid: wordclassid,
                                                                                wordclass: wordclass,
                                                                                wordclasstype:wordclasstype
                                                                            },
                                                                            async: true,
                                                                            success: function (result, request) {
                                                                                var retobj = Ext.JSON.decode(result.responseText);
                                                                                Ext.MessageBox.alert('删除提示',retobj.msg);
                                                                                if(retobj.success===true){
                                                                                    var page = gridpanel.store.currentPage;
                                                                                    if(page > 1){
                                                                                        if(gridpanel.store.data.length<=1){
                                                                                            page = page-1;
                                                                                        }
                                                                                    }
                                                                                    gridpanel.store.loadPage(page);
                                                                                    var oldwordclass = Ext.getCmp("tfcwordclass").getValue();
                                                                                    if(oldwordclass==wordclass){
                                                                                        Ext.getCmp('worditemgridpanel').store.loadPage(1);
                                                                                        Ext.getCmp("tfcwordclass").setValue("");
                                                                                        Ext.getCmp("tfcwordclass2").setValue("");
                                                                                        Ext.getCmp("tfcworditem").setValue("");
                                                                                        Ext.getCmp('synonymgridpanel').store.loadPage(1);
                                                                                    }
                                                                                }
                                                                            },
                                                                            failure: function (result, request) {
                                                                                Ext.MessageBox.alert('系统异常', '请求数据失败！');
                                                                            }
                                                                        });
                                                                    }
                                                                }
                                                            },
                                                            icon: '../Images/delete-small.gif',
                                                            tooltip: '删除'
                                                        }
                                                    ]
                                                }
                                            ],
                                            selModel: Ext.create('Ext.selection.CellModel', {
                                                listeners: {
                                                    select: {
                                                        fn: me.onCellModelSelect,
                                                        scope: me
                                                    }
                                                }
                                            }),
                                            plugins: [
                                                Ext.create('Ext.grid.plugin.CellEditing', {
                                                    listeners: {
                                                        edit: {
                                                            fn: me.onCellEditingEdit,
                                                            scope: me
                                                        }
                                                    }
                                                })
                                            ],
                                            dockedItems: [
                                                {
                                                    xtype: 'pagingtoolbar',
                                                    dock: 'bottom',
                                                    width: 360,
                                                    displayInfo: true,
                                                    displayMsg: '当前{0}-{1},共{2}',
                                                    store: 'wordclassStore'
                                                }
                                            ],
                                            listeners: {
                                                render: {
                                                    fn: me.onWordclassgridpanelRender,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    xtype: 'panel',
                                    columnWidth: 1,
                                    border: 0,
                                    margin: '10px 0px 10px 0px',
                                    layout: 'column',
                                    title: '词类编辑区',
                                    items: [
                                        {
                                            xtype: 'radiogroup',
                                            columnWidth: 1,
                                            hidden: true,
                                            id: 'rdwoclasstype',
                                            margin: '10px 10px 20px 5px',
                                            width: 400,
                                            fieldLabel: '词类归属',
                                            labelWidth: 60,
                                            items: [
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'belong',
                                                    boxLabel: '当前商家',
                                                    checked: true,
                                                    inputValue: '当前商家'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'belong',
                                                    boxLabel: '当前行业',
                                                    inputValue: '当前行业'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'belong',
                                                    boxLabel: '通用行业',
                                                    inputValue: '通用行业'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'textareafield',
                                            columnWidth: 1,
                                            height: 262,
                                            id: 'tawordclass',
                                            margin: '10px 10px 20px 5px',
                                            width: 297
                                        },
                                        {
                                            xtype: 'button',
                                            height: 22,
                                            margin: '90px 5px 0px 0px',
                                            icon: '../Images/save-small.gif',
                                            text: '保存',
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick2,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            columnWidth: 0.35,
                            layout: 'column',
                            items: [
                                {
                                    xtype: 'panel',
                                    columnWidth: 1,
                                    border: 0,
                                    layout: 'column',
                                    title: '词条显示区',
                                    items: [
                                        {
                                            xtype: 'panel',
                                            columnWidth: 1,
                                            border: 0,
                                            margin: '10px 0px 0px 0px',
                                            layout: 'column',
                                            items: [
                                                {
                                                    xtype: 'textfield',
                                                    columnWidth: 0.5,
                                                    height: 22,
                                                    id: 'tfworditem',
                                                    margin: '0px 10px 0px 10px',
                                                    width: 112,
                                                    fieldLabel: '词条',
                                                    labelWidth: 30
                                                },
                                                {
                                                    xtype: 'comboboxtree',
                                                    cascade: 'child',
                                                    storeUrl: '../getSelectCityTree.action',
                                                    isitem: true,
                                                    columnWidth: 0.5,
                                                    height: 22,
                                                    id: 'selectcity',
                                                    margin: '0px 10px 0px 10px',
                                                    fieldLabel: '城市',
                                                    labelWidth: 30,
                                                    editable: false
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    columnWidth: 0.3,
                                                    height: 22,
                                                    id: 'cbworditemtype',
                                                    margin: '5px 0px 0px 10px',
                                                    fieldLabel: '类型',
                                                    labelWidth: 30,
                                                    editable: false,
                                                    store: 'worditemtypequeryStore',
                                                    valueField: 'id'
                                                },
                                                {
                                                    xtype: 'checkboxfield',
                                                    columnWidth: 0.2,
                                                    height: 22,
                                                    id: 'ckworditemprecise',
                                                    margin: '5px 10px 0px 10px',
                                                    boxLabel: '精确'
                                                },
                                                {
                                                    xtype: 'checkboxfield',
                                                    columnWidth: 0.25,
                                                    height: 22,
                                                    id: 'ckcwordclass',
                                                    margin: '5px 10px 0px 10px',
                                                    boxLabel: '当前词类',
                                                    checked: true
                                                },
                                                {
                                                    xtype: 'button',
                                                    hidden: true,
                                                    margin: '5px 0px 0px 0px',
                                                    icon: '../Images/export.gif',
                                                    text: '导出',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick8,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    height: 22,
                                                    margin: '5px 0px 0px 10px',
                                                    icon: '../Images/search-small.gif',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick3,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'gridpanel',
                                            columnWidth: 1,
                                            height: 270,
                                            id: 'worditemgridpanel',
                                            margin: '10px 5px 0px 5px',
                                            enableColumnHide: false,
                                            store: 'worditemStore',
                                            viewConfig: {
                                                enableTextSelection: true,
                                                loadingText: '词条正在加载中,请稍后...'
                                            },
                                            columns: [
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        if(record.data['isInclude']){
                                                            return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                        }
                                                        return '<div style="white-space:normal;font-size:12px;color:red;">' + value + '</div>';
                                                    },
                                                    width: 35,
                                                    dataIndex: 'id',
                                                    text: '序号'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        value = Ext.htmlEncode(value);
                                                        if(record.data['isInclude']){
                                                            return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                        }
                                                        return '<div style="white-space:normal;font-size:12px;color:red;">' + value + '</div>';
                                                    },
                                                    width: 106,
                                                    dataIndex: 'worditem',
                                                    text: '词条',
                                                    editor: {
                                                        xtype: 'textfield'
                                                    }
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        if(record.data['isInclude']){
                                                            return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                        }
                                                        return '<div style="white-space:normal;font-size:12px;color:red;">' + value + '</div>';
                                                    },
                                                    hidden: true,
                                                    width: 60,
                                                    dataIndex: 'type',
                                                    text: '类型',
                                                    editor: {
                                                        xtype: 'combobox',
                                                        editable: false,
                                                        store: 'worditemtypeStore'
                                                    }
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        if(record.data['isInclude']){
                                                            return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                        }
                                                        return '<div style="white-space:normal;font-size:12px;color:red;">' + value + '</div>';
                                                    },
                                                    width: 95,
                                                    weight: 80,
                                                    dataIndex: 'wordclass',
                                                    text: '词类'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        if(record.data['isInclude']){
                                                            return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                        }
                                                        return '<div style="white-space:normal;font-size:12px;color:red;">' + value + '</div>';
                                                    },
                                                    width: 40,
                                                    dataIndex: 'isHaveSynonym',
                                                    text: '别名',
                                                    editor: {
                                                        xtype: 'textfield'
                                                    }
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    hidden: true,
                                                    dataIndex: 'wordid',
                                                    text: 'wordid'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    hidden: true,
                                                    dataIndex: 'wordclassid',
                                                    text: 'wordclassid'
                                                },
                                                {
                                                    xtype: 'actioncolumn',
                                                    header: '删除',
                                                    width: 35,
                                                    align: 'center',
                                                    items: [
                                                        {
                                                            handler: function(view, rowIndex, colIndex, item, e) {
                                                                Ext.MessageBox.confirm('提示','若删除该词条,其对应的别名同时被删除,确定删除吗？',callBack);
                                                                function callBack(id){
                                                                    if(id=='yes'){
                                                                        var gridpanel = Ext.getCmp("worditemgridpanel");
                                                                        var wordid = gridpanel.store.getAt(rowIndex).get('wordid');
                                                                        var wordclass = gridpanel.store.getAt(rowIndex).get('wordclass');
                                                                        var worditem = gridpanel.store.getAt(rowIndex).get('worditem');
                                                                        Ext.Ajax.request({
                                                                            url: '../worditem.action',
                                                                            method: 'post',
                                                                            params: {
                                                                                action: 'delete',
                                                                                wordid: wordid,
                                                                                curwordclass: wordclass,
                                                                                worditem: worditem,
                                                                                curwordclasstype:curwordclasstype
                                                                            },
                                                                            async: true,
                                                                            success: function (result, request) {
                                                                                var retobj = Ext.JSON.decode(result.responseText);
                                                                                Ext.MessageBox.alert('删除提示',retobj.msg);
                                                                                if(retobj.success===true){
                                                                                    var page = gridpanel.store.currentPage;
                                                                                    if(page > 1){
                                                                                        if(gridpanel.store.data.length<=1){
                                                                                            page = page-1;
                                                                                        }
                                                                                    }
                                                                                    gridpanel.store.loadPage(page);
                                                                                    var oldworditem = Ext.getCmp("tfcworditem").getValue();
                                                                                    if(oldworditem==worditem){
                                                                                        Ext.getCmp("tfcworditem").setValue("");
                                                                                        Ext.getCmp('synonymgridpanel').store.loadPage(1);
                                                                                    }

                                                                                }
                                                                            },
                                                                            failure: function (result, request) {
                                                                                Ext.MessageBox.alert('系统异常', '请求数据失败！');
                                                                            }
                                                                        });
                                                                    }
                                                                }
                                                            },
                                                            icon: '../Images/delete-small.gif',
                                                            tooltip: '删除'
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'actioncolumn',
                                                    header: '地市属性',
                                                    width: 56,
                                                    align: 'center',
                                                    items: [
                                                        {
                                                            handler: function(view, rowIndex, colIndex, item, e) {
                                                                var gridpanel = Ext.getCmp("worditemgridpanel");
                                                                var wordclass = gridpanel.store.getAt(rowIndex).get('wordclass');
                                                                /*if(wordclass.indexOf("父类")==-1){
                                                                Ext.MessageBox.alert('提示信息',"词条地市信息编辑仅限父类!");
                                                                return false;
                                                                }*/
                                                                var wordid = gridpanel.store.getAt(rowIndex).get('wordid');
                                                                var worditem = gridpanel.store.getAt(rowIndex).get('worditem');

                                                                // var winid = 'myWin'+rwordid;
                                                                // var w;
                                                                // //创建window
                                                                //     w = Ext.create("Ext.window.Window", {
                                                                //     id: winid,
                                                                //     title: "示例窗口",
                                                                //     width: 500,
                                                                //     height: 300,
                                                                //     layout: "fit",
                                                                //     autoShow: true,
                                                                //     draggable: false,
                                                                //     maximizable : false,// 最大化控制 值为true时可以最大化窗体
                                                                //     modal:true,//背景变灰不可编辑
                                                                //     contentEl: "content"
                                                                // });

                                                                // w.show();

                                                                var url = "../unknown/unknown.jsp?wordid=" +wordid+"&wordclass="+wordclass+"&worditem="+encodeURI(worditem);


                                                                var  w = new Ext.Window({
                                                                    layout: "fit",
                                                                    autoShow: true,
                                                                    layout: 'absolute',
                                                                    draggable: false,
                                                                    maximizable : false,// 最大化控制 值为true时可以最大化窗体
                                                                    modal:true,//背景变灰不可编辑
                                                                    html:'<iframe src="'+ url +'" style="height:500px;width:500px;" ></iframe>',
                                                                    title:"地市属性"
                                                                });
                                                                w.show();
                                                            },
                                                            icon: '../Images/editf.gif',
                                                            tooltip: '查看编辑'
                                                        }
                                                    ]
                                                }
                                            ],
                                            selModel: Ext.create('Ext.selection.CellModel', {
                                                listeners: {
                                                    select: {
                                                        fn: me.onCellModelSelect1,
                                                        scope: me
                                                    }
                                                }
                                            }),
                                            plugins: [
                                                Ext.create('Ext.grid.plugin.CellEditing', {
                                                    listeners: {
                                                        edit: {
                                                            fn: me.onCellEditingEdit1,
                                                            scope: me
                                                        }
                                                    }
                                                })
                                            ],
                                            dockedItems: [
                                                {
                                                    xtype: 'pagingtoolbar',
                                                    dock: 'bottom',
                                                    width: 360,
                                                    displayInfo: true,
                                                    displayMsg: '当前{0}-{1},共{2}',
                                                    store: 'worditemStore'
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'panel',
                                    columnWidth: 1,
                                    border: 0,
                                    margin: '10px 0px 10px 0px',
                                    layout: 'column',
                                    title: '词条编辑区',
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            columnWidth: 1,
                                            disabled: true,
                                            height: 20,
                                            id: 'tfcwordclass',
                                            margin: '10px 5px 0px 5px',
                                            fieldLabel: '选中词类',
                                            labelWidth: 60,
                                            readOnly: true
                                        },
                                        {
                                            xtype: 'comboboxtree',
                                            storeUrl: '../getAddCityTree.action',
                                            cascade: 'child',
                                            isitem: true,
                                            columnWidth: 0.7,
                                            id: 'addusercity',
                                            margin: '10px 5px 0px 5px',
                                            fieldLabel: '城市',
                                            labelWidth: 60,
                                            editable: false
                                        },
                                        {
                                            xtype: 'checkboxfield',
                                            columnWidth: 0.3,
                                            height: 20,
                                            hidden: true,
                                            id: 'cksworditem',
                                            margin: '10px 5px 0px 40px',
                                            boxLabel: '标准词',
                                            checked: true
                                        },
                                        {
                                            xtype: 'textareafield',
                                            columnWidth: 1,
                                            height: 200,
                                            id: 'taworditem',
                                            margin: '10px 10px 20px 5px'
                                        },
                                        {
                                            xtype: 'button',
                                            height: 22,
                                            margin: '90px 5px 0px 0px',
                                            icon: '../Images/save-small.gif',
                                            text: '保存',
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick4,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            columnWidth: 0.35,
                            layout: 'column',
                            items: [
                                {
                                    xtype: 'panel',
                                    columnWidth: 1,
                                    border: 0,
                                    layout: 'column',
                                    title: '别名显示区',
                                    items: [
                                        {
                                            xtype: 'panel',
                                            columnWidth: 1,
                                            border: 0,
                                            margin: '10px 0px 0px 0px',
                                            layout: 'column',
                                            items: [
                                                {
                                                    xtype: 'textfield',
                                                    columnWidth: 0.35,
                                                    height: 22,
                                                    id: 'tfsynonym',
                                                    margin: '0px 10px 0px 10px',
                                                    fieldLabel: '别名',
                                                    labelWidth: 30
                                                },
                                                {
                                                    xtype: 'comboboxtree',
                                                    storeUrl: '../getSelectCityTree.action',
                                                    cascade: 'child',
                                                    isitem: false,
                                                    columnWidth: 0.4,
                                                    id: 'selectcity2',
                                                    margin: '0px 10px 0px 10px',
                                                    fieldLabel: '城市',
                                                    labelWidth: 30,
                                                    editable: false
                                                },
                                                {
                                                    xtype: 'checkboxfield',
                                                    columnWidth: 0.25,
                                                    height: 22,
                                                    id: 'ckcwordclass2',
                                                    boxLabel: '当前词类',
                                                    checked: true
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    columnWidth: 0.3,
                                                    height: 22,
                                                    id: 'cbsynonymtype',
                                                    margin: '5px 0px 0px 10px',
                                                    fieldLabel: '类型',
                                                    labelWidth: 30,
                                                    editable: false,
                                                    store: 'synonymtypequeryStore',
                                                    valueField: 'id'
                                                },
                                                {
                                                    xtype: 'checkboxfield',
                                                    columnWidth: 0.2,
                                                    height: 22,
                                                    id: 'cksynonymprecise',
                                                    margin: '5px 10px 0px 10px',
                                                    boxLabel: '精确'
                                                },
                                                {
                                                    xtype: 'checkboxfield',
                                                    columnWidth: 0.25,
                                                    height: 22,
                                                    id: 'ckcworditem',
                                                    margin: '5px 10px 0px 10px',
                                                    boxLabel: '当前词条',
                                                    checked: true
                                                },
                                                {
                                                    xtype: 'button',
                                                    hidden: true,
                                                    margin: '5px 0px 0px 0px',
                                                    icon: '../Images/export.gif',
                                                    text: '导出',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick9,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    height: 22,
                                                    margin: '5px 0px 0px 10px',
                                                    icon: '../Images/search-small.gif',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick5,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'gridpanel',
                                            columnWidth: 1,
                                            height: 270,
                                            id: 'synonymgridpanel',
                                            margin: '10px 5px 0px 5px',
                                            enableColumnHide: false,
                                            store: 'synonymStore',
                                            viewConfig: {
                                                enableTextSelection: true,
                                                loadingText: '别名正在加载中,请稍后...'
                                            },
                                            columns: [
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        if(record.data['isInclude']){
                                                            return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                        }
                                                        return '<div style="white-space:normal;font-size:12px;color:red;">' + value + '</div>';
                                                    },
                                                    width: 35,
                                                    align: 'center',
                                                    dataIndex: 'id',
                                                    text: '序号'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        value = Ext.htmlEncode(value);
                                                        if(record.data['isInclude']){
                                                            return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                        }
                                                        return '<div style="white-space:normal;font-size:12px;color:red;">' + value + '</div>';
                                                    },
                                                    width: 80,
                                                    dataIndex: 'synonym',
                                                    text: '别名',
                                                    editor: {
                                                        xtype: 'textfield'
                                                    }
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        if(record.data['isInclude']){
                                                            return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                        }
                                                        return '<div style="white-space:normal;font-size:12px;color:red;">' + value + '</div>';
                                                    },
                                                    hidden: true,
                                                    width: 60,
                                                    dataIndex: 'type',
                                                    text: '类型',
                                                    editor: {
                                                        xtype: 'combobox',
                                                        editable: false,
                                                        store: 'synonymtypeStore'
                                                    }
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        value = Ext.htmlEncode(value);
                                                        if(record.data['isInclude']){
                                                            return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                        }
                                                        return '<div style="white-space:normal;font-size:12px;color:red;">' + value + '</div>';
                                                    },
                                                    saveDelay: 80,
                                                    width: 70,
                                                    dataIndex: 'worditem',
                                                    text: '标准词'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                        if(record.data['isInclude']){
                                                            return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                                        }
                                                        return '<div style="white-space:normal;font-size:12px;color:red;">' + value + '</div>';
                                                    },
                                                    width: 70,
                                                    dataIndex: 'wordclass',
                                                    text: '词类'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    hidden: true,
                                                    dataIndex: 'wordid',
                                                    text: 'wordid'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    hidden: true,
                                                    dataIndex: 'stdwordid',
                                                    text: 'stdwordid'
                                                },
                                                {
                                                    xtype: 'actioncolumn',
                                                    header: '删除',
                                                    width: 35,
                                                    align: 'center',
                                                    items: [
                                                        {
                                                            handler: function(view, rowIndex, colIndex, item, e) {
                                                                var gridpanel = Ext.getCmp("synonymgridpanel");
                                                                var wordid = gridpanel.store.getAt(rowIndex).get('wordid');
                                                                var synonym = gridpanel.store.getAt(rowIndex).get('synonym');
                                                                Ext.Ajax.request({
                                                                    url: '../synonym.action',
                                                                    method: 'post',
                                                                    params: {
                                                                        action: 'delete',
                                                                        stdwordid: wordid,
                                                                        synonym: synonym,
                                                                        curworditem: curworditem,
                                                                        curwordclass: curwordclass
                                                                    },
                                                                    async: true,
                                                                    success: function (result, request) {
                                                                        var retobj = Ext.JSON.decode(result.responseText);
                                                                        Ext.MessageBox.alert('删除提示',retobj.msg);
                                                                        if(retobj.success===true){
                                                                            var page = gridpanel.store.currentPage;
                                                                            if(page > 1){
                                                                                if(gridpanel.store.data.length<=1){
                                                                                    page = page-1;
                                                                                }
                                                                            }
                                                                            gridpanel.store.loadPage(page);
                                                                        }
                                                                    },
                                                                    failure: function (result, request) {
                                                                        Ext.MessageBox.alert('系统异常', '请求数据失败！');
                                                                    }
                                                                });
                                                            },
                                                            icon: '../Images/delete-small.gif',
                                                            tooltip: '删除'
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'actioncolumn',
                                                    header: '地市属性',
                                                    items: [
                                                        {
                                                            handler: function(view, rowIndex, colIndex, item, e) {
                                                                var gridpanel = Ext.getCmp("synonymgridpanel");
                                                                var wordclass = gridpanel.store.getAt(rowIndex).get('wordclass');
                                                                // if(wordclass.indexOf("父类")==-1){
                                                                //      Ext.MessageBox.alert('提示信息',"词条地市信息编辑仅限父类!");
                                                                //     return false;
                                                                // }
                                                                var wordid = gridpanel.store.getAt(rowIndex).get('wordid');
                                                                var worditem = gridpanel.store.getAt(rowIndex).get('synonym');

                                                                // var winid = 'myWin'+rwordid;
                                                                // var w;
                                                                // //创建window
                                                                //     w = Ext.create("Ext.window.Window", {
                                                                //     id: winid,
                                                                //     title: "示例窗口",
                                                                //     width: 500,
                                                                //     height: 300,
                                                                //     layout: "fit",
                                                                //     autoShow: true,
                                                                //     draggable: false,
                                                                //     maximizable : false,// 最大化控制 值为true时可以最大化窗体
                                                                //     modal:true,//背景变灰不可编辑
                                                                //     contentEl: "content"
                                                                // });

                                                                // w.show();

                                                                var url = "../unknown/unknown1.jsp?wordid=" +wordid+"&wordclass="+wordclass+"&worditem="+encodeURI(worditem);


                                                                var  w = new Ext.Window({
                                                                    layout: "fit",
                                                                    autoShow: true,
                                                                    layout: 'absolute',
                                                                    draggable: false,
                                                                    maximizable : false,// 最大化控制 值为true时可以最大化窗体
                                                                    modal:true,//背景变灰不可编辑
                                                                    html:'<iframe src="'+ url +'" style="height:500px;width:500px;" ></iframe>',
                                                                    title:"地市属性"
                                                                });
                                                                w.show();
                                                            },
                                                            icon: '../Images/editf.gif',
                                                            tooltip: '查看编辑'
                                                        }
                                                    ]
                                                }
                                            ],
                                            selModel: Ext.create('Ext.selection.CheckboxModel', {

                                            }),
                                            plugins: [
                                                Ext.create('Ext.grid.plugin.CellEditing', {
                                                    listeners: {
                                                        edit: {
                                                            fn: me.onCellEditingEdit2,
                                                            scope: me
                                                        }
                                                    }
                                                })
                                            ],
                                            dockedItems: [
                                                {
                                                    xtype: 'pagingtoolbar',
                                                    dock: 'bottom',
                                                    width: 360,
                                                    displayInfo: true,
                                                    displayMsg: '当前{0}-{1},共{2}',
                                                    store: 'synonymStore',
                                                    items: [
                                                        {
                                                            xtype: 'button',
                                                            icon: '../Images/delete-small.gif',
                                                            text: '批量删除',
                                                            tooltip: '批量删除',
                                                            listeners: {
                                                                click: {
                                                                    fn: me.onButtonClick7,
                                                                    scope: me
                                                                }
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'panel',
                                    columnWidth: 1,
                                    border: 0,
                                    margin: '10px 0px 10px 0px',
                                    layout: 'column',
                                    title: '别名编辑区',
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            columnWidth: 1,
                                            disabled: true,
                                            height: 20,
                                            id: 'tfcwordclass2',
                                            margin: '10px 5px 0px 5px',
                                            fieldLabel: '选中词类',
                                            labelWidth: 60,
                                            readOnly: true
                                        },
                                        {
                                            xtype: 'textfield',
                                            columnWidth: 1,
                                            disabled: true,
                                            height: 20,
                                            id: 'tfcworditem',
                                            margin: '10px 5px 0px 5px',
                                            fieldLabel: '选中词条',
                                            labelWidth: 60,
                                            readOnly: true
                                        },
                                        {
                                            xtype: 'comboboxtree',
                                            storeUrl: '../getAddCityTree.action',
                                            cascade: 'child',
                                            isitem: false,
                                            columnWidth: 1,
                                            id: 'addusercity2',
                                            margin: '10px 5px 0px 5px',
                                            fieldLabel: '城市',
                                            labelWidth: 60,
                                            editable: false
                                        },
                                        {
                                            xtype: 'radiogroup',
                                            columnWidth: 1,
                                            height: 20,
                                            hidden: true,
                                            id: 'rdsynonymtype',
                                            margin: '10px 5px 0px 5px',
                                            width: 400,
                                            fieldLabel: '别名类型',
                                            labelWidth: 60,
                                            columns: 'auto',
                                            items: [
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'synonymtype',
                                                    boxLabel: '全称',
                                                    checked: true,
                                                    inputValue: '全称'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'synonymtype',
                                                    boxLabel: '简称',
                                                    inputValue: '简称'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'synonymtype',
                                                    boxLabel: '代码',
                                                    inputValue: '代码'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'synonymtype',
                                                    boxLabel: '错词',
                                                    inputValue: '错词'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'synonymtype',
                                                    boxLabel: '其他别名',
                                                    inputValue: '其他别名'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'textareafield',
                                            columnWidth: 1,
                                            height: 140,
                                            id: 'tasynonym',
                                            margin: '10px 10px 20px 5px'
                                        },
                                        {
                                            xtype: 'button',
                                            height: 22,
                                            margin: '90px 5px 0px 0px',
                                            icon: '../Images/save-small.gif',
                                            text: '保存',
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick6,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick1: function(button, e, eOpts) {
        var hef = "";
        Ext.Msg.show({
            title: '提示',
            buttons: 2,
            buttonText: {'yes':'导出全部','no':'导出当前词类'},
            msg: 'Please enter your address:',
            width: 200,
            height: 400,
            closable: true,
            fn: function(button, text) {
                Ext.MessageBox.alert('您点击的是' + button + "输入的内容为: " + text);
            },
            icon: "ext-mb-success"
        });
        Ext.MessageBox.confirm('提示','确认导出词库吗?',callBack);
        function callBack(id){
            if(id=='yes'){
                var wordclass = Ext.getCmp("tfwordclass").getValue().replace(new RegExp(' ','g'),'');
                var wordclassprecise = Ext.getCmp("ckwordclassprecise").getValue();
                var cbwordclasstypeselect = Ext.getCmp("cbwordclasstypeselect").getValue();
                if(cbwordclasstypeselect===null||cbwordclasstypeselect===""){
                    cbwordclasstypeselect="全部";
                }
                var request = {
                    type:1,
                    wordprecise:wordclassprecise,
                    word:wordclass,
                    wordtype:cbwordclasstypeselect,
                    contatiner : "基础"
                };
                hef = "request="+JSON.stringify(request);
                window.location.href = '../exportWord.action?'+hef;
                Ext.MessageBox.alert('下载提示',"正在下载，下载完成之前请不要关闭此窗口");
            }else{
                return;
            }
        }

        // function Read5() {
        //     var progressBar = Ext.Msg.show({
        //         title:"提示",
        //         msg:"正在努力地为您导出数据......",
        //         width:300,
        //         wait:true,
        //         waitConfig:{
        //             interval:500,
        //             duration:1000000,
        //             fn:function () {

        //             }
        //         },
        //         closable:true
        //     });
        // }

        // function RimeSearch(){
        //     //调用Ajax方法，同步请求获取数据
        //     Ext.Ajax.request({
        //         url: '/KM/file/progress?'+hef,
        //         method:'post',
        //         async: false, //同步请求数据
        //         //获取数据成功
        //         success: function (resp1, request) {
        //             var data = Ext.JSON.decode(resp1.responseText);
        //             if(data&&data.state){
        //                 switch(data.state){
        //                     case 1:
        //                         break;
        //                     case 2:
        //                         break;
        //                     case 3:
        //                         break;
        //                     case 4:
        //                         setTimeout(function(value) {
        //                             Ext.Msg.hide();
        //                         }, 3000);
        //                         break;
        //                 }
        //                 progressBar.updateProgress(curnum,bartext);
        //             }else{
        //                 setTimeout(function(value) {
        //                     Ext.Msg.hide();
        //                 }, 3000);
        //             }
        //         },
        //         failure: function (result, request) {
        //             Ext.MessageBox.alert('系统异常', '请求数据失败！');
        //         }
        //     });
        // }
    },

    onButtonClick: function(button, e, eOpts) {
        Ext.getCmp('worditemgridpanel').store.removeAll();//清空词条列表
        Ext.getCmp('wordclassgridpanel').store.loadPage(1);
    },

    onCellModelSelect: function(cellmodel, record, row, column, eOpts) {
        var selRecords = Ext.getCmp("wordclassgridpanel").getSelectionModel().getSelection();
        var wordclass = "";
        if (selRecords.length >= 1) {
            curwordclass = selRecords[0].get("wordclass");
            curwordclassid = selRecords[0].get("wordclassid");
            //curwordclasstype = selRecords[0].get("wordclasstype");
        }
        Ext.getCmp("tfcwordclass").setValue(curwordclass);
        Ext.getCmp("ckcwordclass").setValue(true);
        Ext.getCmp("selectcity").clearValue();
        Ext.getCmp("selectcity").bindValue(usercityname,usercity);
        Ext.getCmp("addusercity").clearValue();
        Ext.getCmp("addusercity").bindValue(usercityname,usercity);
        var iscurrentwordclass = Ext.getCmp("ckcwordclass").getValue();
        if(iscurrentwordclass){
            Ext.getCmp("tfworditem").setValue("");
            Ext.getCmp("cbworditemtype").setValue("");
            Ext.getCmp("ckworditemprecise").setValue(false);
            Ext.getCmp("ckcwordclass").setValue(true);
            Ext.getCmp('worditemgridpanel').store.loadPage(1);
            Ext.getCmp('synonymgridpanel').store.removeAll();//清空别名列表
            Ext.getCmp("tfcworditem").setValue("");
            Ext.getCmp("tfcwordclass2").setValue("");

        }
    },

    onCellEditingEdit: function(editor, e, eOpts) {
        var oldvalue  = e.record.getData().wordclass;
        var newvalue = e.record.getData().wordclass;
        var oldwordclasstype = e.record.getData().wordclasstype;
        var newwordclasstype = e.record.getData().wordclasstype;

        if(e.value==e.originalValue){
            return;
        }else if(e.value==='' || e.value===null){
            Ext.MessageBox.alert('提示','不能为空');
            e.record.set(e.field,e.originalValue);
            return;
        }
        Ext.MessageBox.confirm('提示','确定更新数据吗?',callBack);
        function callBack(id){
            if(e.field=="wordclass"){
                oldvalue= e.originalValue;
                newvalue=e.value;
            }
            else if(e.field=="wordclasstype"){
                oldwordclasstype = e.originalValue;
                newwordclasstype = e.value;

            }
            if(id=='no'){
                e.record.set(e.field,e.originalValue);
                return;
            }else{
                Ext.Ajax.request({
                    url: '../wordclass.action',
                    method: 'post',
                    timeout:300000,
                    params: {
                        action: 'update',
                        id: e.record.getData().wordclassid,
                        oldvalue: oldvalue,
                        newvalue: newvalue,
                        oldwordclasstype: oldwordclasstype,
                        newwordclasstype:newwordclasstype
                    },
                    async: true,
                    success: function (result, request) {
                        var retobj = Ext.JSON.decode( result.responseText);
                        Ext.MessageBox.alert('修改提示',retobj.msg);
                        if(retobj.success===true){
                            e.record.commit();
                        }else {
                            e.record.set(e.field,e.originalValue);
                        }
                    },
                    failure: function (result, request) {
                        Ext.MessageBox.alert('系统异常', '请求数据失败！');
                    }
                });
            }
        }
    },

    onWordclassgridpanelRender: function(component, eOpts) {
        //Ext.getCmp('wordclassgridpanel').store.loadPage(1);
    },

    onButtonClick2: function(button, e, eOpts) {
        var wordclasses = Ext.getCmp("tawordclass").getValue().replace(new RegExp(' ','g'),'');
        if(wordclasses===""){
            Ext.MessageBox.alert("提示", "词类不能为空!");
            return;
        }
        var rdwoclasstype = Ext.getCmp("rdwoclasstype").getChecked()[0].inputValue;
        if(rdwoclasstype===null||rdwoclasstype===""){
            Ext.MessageBox.alert("提示消息", "请选择一种词类归属！");
            return;
        }
        wordclasses = wordclasses.replace(new RegExp("\r\n",'g'),"\n");
        wordclasses = wordclasses.replace(/^\n+|\n+$/g,"");
        var temp = wordclasses.split('\n');
        //temp = quchong(temp);
        wordclasses = "";
        for(var i = 0;i < temp.length;i++){
            if(temp[i] !== '' && temp[i] != '\n'){
                wordclasses+= temp[i] + '\n';
            }
        }
        wordclasses = wordclasses.substr(0,wordclasses.length-1);
        Ext.Ajax.request({
            url: '../wordclass.action',
            method: 'post',
            params: { action: "insert", wordclass: wordclasses ,wordclasstype:rdwoclasstype},
            async: false,
            success: function (result, request) {
                var retobj = Ext.JSON.decode(result.responseText);
                Ext.MessageBox.alert('保存结果', retobj.msg);
                if(retobj.success===true){
                    Ext.getCmp('wordclassgridpanel').store.loadPage(1);
                }
            },
            failure: function (result, request) {
                Ext.MessageBox.alert('系统异常', '请求数据失败！');
            }
        });
    },

    onButtonClick8: function(button, e, eOpts) {
        var hef = "";
        Ext.MessageBox.confirm('提示','确认导出词库吗?',callBack);
        function callBack(id){
            if(id=='yes'){
                var worditem = Ext.getCmp("tfworditem").getValue().replace(new RegExp(' ','g'),'%');
                var worditemprecise = Ext.getCmp("ckworditemprecise").getValue();
                var iscurrentwordclass = Ext.getCmp("ckcwordclass").getValue();
                var worditemtype = Ext.getCmp("cbworditemtype").getValue();
                var citycode = Ext.getCmp("selectcity").submitValue;
                var wordclass = Ext.getCmp("tfwordclass").getValue().replace(new RegExp(' ','g'),'');
                var wordclassprecise = Ext.getCmp("ckwordclassprecise").getValue();
                var cbwordclasstypeselect = Ext.getCmp("cbwordclasstypeselect").getValue();
                if(cbwordclasstypeselect===null||cbwordclasstypeselect===""){
                    cbwordclasstypeselect="全部";
                }
                var request = {
                    type:2,
                    wordprecise:worditemprecise,
                    word:worditem,
                    wordtype:worditemtype,
                    contatiner : "基础",
                    iscurrentword: iscurrentwordclass,
                    worditemtype: worditemtype,
                    curwordclass: curwordclass,
                    citycode: citycode
                };
                hef = "request="+JSON.stringify(request);
                window.location.href = '../exportWord.action?'+hef;
                Ext.MessageBox.alert('下载提示',"正在下载，下载完成之前请不要关闭此窗口");
            }else{
                return;
            }
        }
    },

    onButtonClick3: function(button, e, eOpts) {
        Ext.getCmp('worditemgridpanel').store.loadPage(1);
    },

    onCellModelSelect1: function(cellmodel, record, row, column, eOpts) {
        var selRecords = Ext.getCmp("worditemgridpanel").getSelectionModel().getSelection();
        if (selRecords.length >= 1) {
            curworditem = selRecords[0].get("worditem");
            curwordclass = selRecords[0].get("wordclass");
            curwordid = selRecords[0].get("wordid");
            curwordclassid = selRecords[0].get("wordclassid");
            curtype = selRecords[0].get("type");
        }

        Ext.getCmp("addusercity2").getPicker().destroy();
        Ext.getCmp("addusercity2").createPicker();
        Ext.Ajax.request({
                            url: '../getSynonymCity.action',
                            method: 'post',
                            params: {
                               sign:curwordid
                            },
                            async: true,
                            success: function (result, request) {
                                var retobj = Ext.JSON.decode( result.responseText);
                                Ext.getCmp("addusercity2").setValue(retobj.cityname);
        						Ext.getCmp("addusercity2").setSubmitValue(retobj.citycode);
                            },
                            failure: function (result, request) {
                                Ext.MessageBox.alert('系统异常', '请求数据失败！');
                            }
                        });
        Ext.getCmp("selectcity2").clearValue();
        Ext.getCmp("selectcity2").bindValue(usercityname,usercity);
        Ext.getCmp("tfcworditem").setValue(curworditem);
        Ext.getCmp("tfcwordclass2").setValue(curwordclass);
        Ext.getCmp("tfcwordclass").setValue(curwordclass);
        Ext.getCmp("ckcworditem").setValue(true);
        var iscurrentworditem = Ext.getCmp("ckcworditem").getValue();
        if(iscurrentworditem){
            Ext.getCmp("tfsynonym").setValue("");
            Ext.getCmp("cksynonymprecise").setValue(false);
            Ext.getCmp("ckcworditem").setValue(true);
            Ext.getCmp("cbsynonymtype").setValue("");

            Ext.getCmp('synonymgridpanel').store.loadPage(1);
        }
    },

    onCellEditingEdit1: function(editor, e, eOpts) {
        var newworditem  = e.record.getData().worditem;
        var oldworditem = e.record.getData().worditem;
        var newtype = e.record.getData().type;
        var oldtype = e.record.getData().type;
        if(e.value==e.originalValue){
            return;
        }else if(e.value==='' || e.value===null){
            Ext.MessageBox.alert('提示','不能为空');
            e.record.set(e.field,e.originalValue);
            return;
        }
        Ext.MessageBox.confirm('提示','确定更新记录吗?',callBack);
        function callBack(id){
            if(e.field=="worditem"){
                newworditem = e.value;
                oldworditem = e.originalValue;
            }
            else if(e.field=="type"){
                newtype = e.value;
                oldtype = e.originalValue;
            }
            if(id=='no'){
                e.record.set(e.field,e.originalValue);
                return;
            }else{
                Ext.Ajax.request({
                    url: '../worditem.action',
                    method: 'post',
                    params: {
                        action: 'update',
                        oldworditem: oldworditem,
                        newworditem: newworditem,
                        oldtype: oldtype,
                        newtype: newtype,
                        wordclassid: e.record.getData().wordclassid,
                        wordid: e.record.getData().wordid,
                        curwordclasstype:curwordclasstype,
                        curwordclass:curwordclass
                    },
                    async: true,
                    success: function (result, request) {
                        var retobj = Ext.JSON.decode( result.responseText);
                        Ext.MessageBox.alert('修改提示',retobj.msg);
                        if(retobj.success===true){
                            e.record.commit();
                            Ext.getCmp('worditemgridpanel').store.loadPage(1);
                        }else {
                            e.record.set(e.field,e.originalValue);
                        }
                    },
                    failure: function (result, request) {
                        Ext.MessageBox.alert('系统异常', '请求数据失败！');
                    }
                });
            }
        }
    },

    onButtonClick4: function(button, e, eOpts) {
        //var worditems = Ext.getCmp("taworditem").getValue().replace(new RegExp(' ','g'),'');
        var worditems = Ext.getCmp("taworditem").getValue();
        if(worditems===""){
            Ext.MessageBox.alert("提示", "词条不能为空!");
            return;
        }
        var oldwordclass = Ext.getCmp("tfcwordclass").getValue();
        if(oldwordclass === "" || oldwordclass === null){
            Ext.MessageBox.alert("提示", "选择的词类不能为空!");
            return;
        }
        worditems = worditems.replace(new RegExp("\r\n",'g'),"\n");
        worditems = worditems.replace(/^\n+|\n+$/g,"");
        var temp = worditems.split('\n');
        //temp = quchong(temp);
        worditems = "";
        for(var i = 0;i < temp.length;i++){
            if(temp[i] !== '' && temp[i] != '\n'){
        //         worditems+= temp[i] + '\n';
                worditems+= temp[i].trim() + '\n';
            }
        }
        worditems = worditems.substr(0,worditems.length-1);
        var isstandardword = Ext.getCmp("cksworditem").getValue();
        var citycode = Ext.getCmp("addusercity").submitValue;
        var cityname = Ext.getCmp("addusercity").getValue();
        Ext.Ajax.request({
            url: '../worditem.action',
            method: 'post',
            params: {
                action: "insert",
                worditem: worditems,
                curwordclass: curwordclass,
                curwordclassid: curwordclassid,
                isstandardword: isstandardword,
                curwordclasstype:curwordclasstype,
                citycode: citycode,
                cityname: cityname
            },
            async: false,
            success: function (result, request) {
                var retobj = Ext.JSON.decode(result.responseText);
                Ext.MessageBox.alert('保存结果', retobj.msg);
                if(retobj.success===true){
                   Ext.getCmp('worditemgridpanel').store.loadPage(1);
                }
            },
            failure: function (result, request) {
                Ext.MessageBox.alert('系统异常', '请求数据失败！');
            }
        });
    },

    onButtonClick9: function(button, e, eOpts) {
        var hef = "";
        Ext.MessageBox.confirm('提示','确认导出词库吗?',callBack);
        function callBack(id){
            if(id=='yes'){
                var synonym = Ext.getCmp("tfsynonym").getValue().replace(new RegExp(' ','g'),'');
                var synonymprecise = Ext.getCmp("cksynonymprecise").getValue();
                var iscurrentworditem = Ext.getCmp("ckcworditem").getValue();
                var synonymtype = Ext.getCmp("cbsynonymtype").getValue();
                var citycode = Ext.getCmp("selectcity2").submitValue;
                var request = {
                    type:3,
                    wordprecise:synonymprecise,
                    word:synonym,
                    wordtype:synonymtype,
                    contatiner : "基础",
                    iscurrentword: iscurrentworditem,
                    curworditem: curworditem,
                    curwordclass: curwordclass,
                    citycode: citycode
                };
                hef = "request="+JSON.stringify(request);
                window.location.href = '../exportWord.action?'+hef;
                Ext.MessageBox.alert('下载提示',"正在下载，下载完成之前请不要关闭此窗口");
            }else{
                return;
            }
        }
    },

    onButtonClick5: function(button, e, eOpts) {
        Ext.getCmp("synonymgridpanel").store.loadPage(1);
    },

    onCellEditingEdit2: function(editor, e, eOpts) {
        var oldsynonym = e.record.getData().synonym;
        var newsynonym = e.record.getData().synonym;
        var oldtype = e.record.getData().type;
        var newtype = e.record.getData().type;
        if(e.value==e.originalValue){
            return;
        }else if(e.value==='' || e.value===null){
            Ext.MessageBox.alert('提示','不能为空');
            e.record.set(e.field,e.originalValue);
            return;
        }
        Ext.MessageBox.confirm('提示','确定更新记录吗?',callBack);
        function callBack(id){
            if(e.field=="synonym"){
                newsynonym = e.value;
                oldsynonym = e.originalValue;
            }else if(e.field=="type"){
                newtype = e.value;
                oldtype = e.originalValue;
            }
            if(id=='no'){
                e.record.set(e.field,e.originalValue);
                return;
            }else{
                Ext.Ajax.request({
                    url: '../synonym.action',
                    method: 'post',
                    params: {
                        action: 'update',
                        oldsynonym: oldsynonym,
                        newsynonym: newsynonym,
                        oldtype: oldtype,
                        newtype: newtype,
                        wordid: e.record.getData().wordid,
                        stdwordid: e.record.getData().stdwordid,
                        curwordclass:curwordclass
                    },
                    async: true,
                    success: function (result, request) {
                        var retobj = Ext.JSON.decode( result.responseText);
                        Ext.MessageBox.alert('修改提示',retobj.msg);
                        if(retobj.success===true){
                            e.record.commit();
                            Ext.getCmp('synonymgridpanel').store.loadPage(1);
                        }else {
                            e.record.set(e.field,e.originalValue);
                        }
                    },
                    failure: function (result, request) {
                        Ext.MessageBox.alert('系统异常', '请求数据失败！');
                    }
                });
            }
        }
    },

    onButtonClick7: function(button, e, eOpts) {
        Ext.MessageBox.confirm('提示','确定删除所选中记录吗?',callBack);
        function callBack(id){
            if(id=='yes'){
                var gridpanel = Ext.getCmp("synonymgridpanel");
                var selRecords = gridpanel.getSelectionModel().getSelection();
                var wordids = "";
                var synonyms = "";
                if(selRecords.length >= 1){
                    for(var i = 0;i < selRecords.length;i++){
                        wordids += selRecords[i].get("wordid");
                        synonyms += selRecords[i].get("synonym");
                        if(i != selRecords.length-1){
                            wordids += ',';
                            synonyms += ',';
                        }
                    }
                    Ext.Ajax.request({
                        url: '../synonym.action',
                        method: 'post',
                        params: {
                            action: 'delete',
                            stdwordid: wordids,
                            synonym: synonyms,
                            curworditem: curworditem,
                            curwordclass: curwordclass
                        },
                        async: true,
                        success: function (result, request) {
                            var retobj = Ext.JSON.decode(result.responseText);
                            Ext.MessageBox.alert('批量删除提示',retobj.msg);
                            if(retobj.success===true){
                                var page = gridpanel.store.currentPage;
                                if(page > 1){
                                    if(gridpanel.store.data.length<=1){
                                        page = page-1;
                                    }
                                }
                                gridpanel.store.loadPage(page);
                            }
                        },
                        failure: function (result, request) {
                            Ext.MessageBox.alert('系统异常', '请求数据失败！');
                        }
                   });
                }else{
                    Ext.MessageBox.alert('提示','请至少选中一行');
                }
            }
        }
    },

    onButtonClick6: function(button, e, eOpts) {
        var synonyms = Ext.getCmp("tasynonym").getValue().replace(new RegExp(' ','g'),'');
        if(synonyms===""){
            Ext.MessageBox.alert("提示", "别名名称不能为空!");
            return;
        }
        var oldworditem = Ext.getCmp("tfcworditem").getValue();
        if(oldworditem === "" || oldworditem === null){
            Ext.MessageBox.alert("提示", "选择的词条不能为空!");
            return;
        }
        if(curtype!="标准名称"){
            Ext.MessageBox.alert("提示", "只有标准词才能创建别名!");
            return;
        }
        var oldwordclass = Ext.getCmp("tfcwordclass2").getValue();
        if(oldwordclass === "" || oldwordclass === null){
            Ext.MessageBox.alert("提示", "选择的词类不能为空!");
            return;
        }

        var synonymtype = Ext.getCmp("rdsynonymtype").getChecked()[0].inputValue;
        if(synonymtype===null||synonymtype===""){
            Ext.MessageBox.alert("提示消息", "请选择一种别名类型！");
            return;
        }
        var citycode = Ext.getCmp("addusercity2").submitValue;
        var cityname = Ext.getCmp("addusercity2").getValue();
        if(citycode===null||citycode===""||cityname===null||cityname===""){
            Ext.MessageBox.alert("提示消息", "地市不能为空！");
            return;
        }
        synonyms = synonyms.replace(new RegExp("\r\n",'g'),"\n");
        synonyms = synonyms.replace(/^\n+|\n+$/g,"");
        var temp = synonyms.split('\n');
        //temp = quchong(temp);
        synonyms = "";
        for(var i = 0;i < temp.length;i++){
            if(temp[i] !== '' && temp[i] != '\n'){
                synonyms+= temp[i] + '\n';
            }
        }
        synonyms = synonyms.substr(0,synonyms.length-1);

        Ext.Ajax.request({
            url: '../synonym.action',
            method: 'post',
            params: {
                action:"insert",
                wordclassid: curwordclassid,
                synonym: synonyms,
                type: synonymtype,
                stdwordid: curwordid,
                curworditem: curworditem,
                curwordclass: curwordclass,
                citycode: citycode,
                cityname: cityname
            },
            async: false,
            success: function (result, request) {
                var retobj = Ext.JSON.decode(result.responseText);
                Ext.MessageBox.alert('保存结果', retobj.msg);
                if(retobj.success===true){
                    Ext.getCmp('synonymgridpanel').store.loadPage(1);
                }
            },
            failure: function (result, request) {
                Ext.MessageBox.alert('系统异常', '请求数据失败！');
            }
        });
    }

});